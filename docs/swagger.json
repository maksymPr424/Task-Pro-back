{
  "openapi": "3.1.0",
  "info": {
    "version": "1.0.0",
    "title": "Task Pro",
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "description": "App to save and interactive with tasks"
  },
  "servers": [
    {
      "url": "http://localhost:3000"
    },
    {
      "url": "https://task-pro-back-kri0.onrender.com"
    }
  ],
  "tags": [
    {
      "name": "Tasks",
      "description": "Operations about tasks."
    },
    {
      "name": "Auth",
      "description": "Auth operations."
    },
    {
      "name": "User",
      "description": "Operations with user profile."
    }
  ],
  "paths": {
    "/login": {
      "get": {
        "$ref": null
      }
    },
    "/user/{id}": {
      "post": {
        "tags": [
          "User"
        ],
        "summary": "Update user profile",
        "operationId": "updateUser",
        "description": "Update a user profile from the provided data",
        "security": [
          {
            "bearerAuth": []
          }
        ],
        "parameters": [
          {
            "in": "path",
            "name": "id",
            "required": true,
            "schema": {
              "type": "string",
              "example": "65ca67e7ae7f10c88b598384"
            }
          }
        ],
        "requestBody": {
          "content": {
            "multipart/form-data": {
              "schema": {
                "type": "object",
                "properties": {
                  "photoUrl": {
                    "description": "Contact's photo",
                    "type": "string",
                    "format": "binary"
                  },
                  "theme": {
                    "description": "Specifies the app theme for the user",
                    "type": "string",
                    "enum": [
                      "light",
                      "dark",
                      "violet"
                    ],
                    "example": "light"
                  },
                  "name": {
                    "description": "User's name",
                    "type": "string",
                    "example": "Elon Musk"
                  },
                  "email": {
                    "description": "User's email",
                    "type": "string",
                    "example": "user@gmail.com"
                  },
                  "password": {
                    "description": "User's password",
                    "type": "string",
                    "example": "jnk23j424l"
                  }
                }
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Updates a user profile",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "required": [
                    "status",
                    "message",
                    "data"
                  ],
                  "properties": {
                    "status": {
                      "type": "integer",
                      "example": 200
                    },
                    "message": {
                      "type": "string",
                      "example": "Successfully updated a user profile!"
                    },
                    "data": {
                      "type": "object",
                      "$ref": "#/components/schemas/userUpdateResponse"
                    }
                  }
                }
              }
            }
          },
          "401": {
            "$ref": "#/components/responses/401"
          },
          "404": {
            "$ref": "#/components/responses/404"
          }
        }
      }
    }
  },
  "components": {
    "securitySchemes": {
      "bearerAuth": {
        "type": "http",
        "scheme": "bearer"
      }
    },
    "schemas": {
      "userUpdateResponse": {
        "type": "object",
        "properties": {
          "name": {
            "description": "User's name",
            "type": "string",
            "example": "Elon Musk"
          },
          "email": {
            "description": "User's email",
            "type": "string",
            "example": "user@gmail.com"
          },
          "theme": {
            "description": "Specifies the app theme for the user",
            "type": "string",
            "enum": [
              "light",
              "dark",
              "violet"
            ],
            "example": "light"
          },
          "photoUrl": {
            "description": "Link to contact's photo",
            "type": "string",
            "example": "https://res.cloudinary.com/uqwgwf/image/upload/image.png"
          }
        }
      }
    },
    "responses": {
      "401": {
        "description": "Unauthorized error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message",
                "data"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 401
                },
                "message": {
                  "type": "string",
                  "example": "UnauthorizedError"
                },
                "data": {
                  "type": "object",
                  "required": [
                    "message"
                  ],
                  "properties": {
                    "message": {
                      "type": "string",
                      "example": "Access token expired"
                    }
                  }
                }
              }
            }
          }
        }
      },
      "404": {
        "description": "Not found error",
        "content": {
          "application/json": {
            "schema": {
              "type": "object",
              "required": [
                "status",
                "message"
              ],
              "properties": {
                "status": {
                  "type": "integer",
                  "example": 404
                },
                "message": {
                  "type": "string",
                  "example": "User not found"
                }
              }
            }
          }
        }
      }
    }
  }
}